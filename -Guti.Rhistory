x = "Number of Species",
y = "num_link",
color = "stream_order"
) +
theme_minimal() +
theme(legend.position = "top")  # Move the legend to the top
a
# Create the plot with linear models for both regions on the same plot
b <- ggplot(data, aes(x = connect, y = num_spec, color = region)) +
geom_point(size = 3) +  # Points colored by region
geom_smooth(method = "lm", se = F) +  # Add separate linear models for each region
labs(
x = "Connectance",
y = "Number of Species",
color = "stream_order"
) +
theme_minimal() +
theme(legend.position = "top")  # Move the legend to the top
# Create the plot with linear models for both regions on the same plot
a <- ggplot(data, aes(x = num_spec, y = num_link,
color = stream_order)) +
geom_point(size = 3) +  # Points colored by region
geom_smooth(method = "lm", se = F) +  # Add separate linear models for each region
labs(
x = "Number of Species",
y = "num_link",
color = "stream_order"
) +
theme_minimal() +
theme(legend.position = "top")  # Move the legend to the top
a
# Create the plot with linear models for both regions on the same plot
b <- ggplot(data, aes(x = connect, y = num_spec,
color = stream_order)) +
geom_point(size = 3) +  # Points colored by region
geom_smooth(method = "lm", se = F) +  # Add separate linear models for each region
labs(
x = "Connectance",
y = "Number of Species",
color = "stream_order"
) +
theme_minimal() +
theme(legend.position = "top")  # Move the legend to the top
b
a + b
# Create the plot with linear models for both regions on the same plot
b <- ggplot(data, aes(x = connect, y = num_spec,
color = stream_order)) +
geom_point(size = 3) +  # Points colored by region
#  geom_smooth(method = "lm", se = F) +  # Add separate linear models for each region
labs(
x = "Connectance",
y = "Number of Species",
color = "stream_order"
) +
theme_minimal() +
theme(legend.position = "top")  # Move the legend to the top
b
a + b
# Create the plot with linear models for both regions on the same plot
a <- ggplot(data, aes(x = num_spec, y = num_link,
color = stream_order)) +
geom_point(size = 3) +  # Points colored by region
# geom_smooth(method = "lm", se = F) +  # Add separate linear models for each region
labs(
x = "Number of Species",
y = "num_link",
color = "stream_order"
) +
theme_minimal() +
theme(legend.position = "top")  # Move the legend to the top
a
# Create the plot with linear models for both regions on the same plot
b <- ggplot(data, aes(x = connect, y = num_spec,
color = stream_order)) +
geom_point(size = 3) +  # Points colored by region
#  geom_smooth(method = "lm", se = F) +  # Add separate linear models for each region
labs(
x = "Connectance",
y = "Number of Species",
color = "stream_order"
) +
theme_minimal() +
theme(legend.position = "top")  # Move the legend to the top
b
a + b
# Create the plot with linear models for both regions on the same plot
b <- ggplot(data, aes(x = connect, y = num_spec,
color = stream_order)) +
geom_point(size = 3) +  # Points colored by region
geom_smooth(method = "lm", se = F) +  # Add separate linear models for each region
labs(
x = "Connectance",
y = "Number of Species",
color = "stream_order"
) +
theme_minimal() +
theme(legend.position = "top")  # Move the legend to the top
b
# Create the plot with linear models for both regions on the same plot
b <- ggplot(data, aes(x = connect, y = num_spec,
color = region)) +
geom_point(size = 3) +  # Points colored by region
geom_smooth(method = "lm", se = F) +  # Add separate linear models for each region
labs(
x = "Connectance",
y = "Number of Species",
color = "stream_order"
) +
theme_minimal() +
theme(legend.position = "top")  # Move the legend to the top
b
a + b
# Create the plot with linear models for both regions on the same plot
b <- ggplot(data, aes(x = connect, y = num_spec,
color = region)) +
geom_point(size = 3) +  # Points colored by region
geom_smooth(method = "", se = F) +  # Add separate linear models for each region
labs(
x = "Connectance",
y = "Number of Species",
color = "stream_order"
) +
theme_minimal() +
theme(legend.position = "top")  # Move the legend to the top
b
# Load required library
library(ggplot2)
# Sample data (as given)
data <- data.frame(
num_spec = c(42, 41, 65, 63, 13, 15, 15, 14, 17, 14, 13, 13, 14, 15, 13, 14, 87, 85, 88, 78,
27.75, 32.5, 38.75, 40.5, 13, 19, 19, 28, 117, 15, 10, 21, 63, 43, 38, 38, 47, 48,
50, 55, 63, 44, 50, 39, 63, 45, 59, 52, 102, 129, 100, 131, 93, 126, 31, 17, 32, 24,
33, 22, 39, 35, 32, 31, 37, 32, 33, 36),
connect = c(0.070, 0.070, 0.060, 0.060, 0.231, 0.257, 0.305, 0.308, 0.316, 0.319, 0.321, 0.321,
0.352, 0.352, 0.372, 0.385, 0.060, 0.060, 0.070, 0.080, 0.260, 0.220, 0.190, 0.190,
0.050, 0.140, 0.190, 0.200, 0.050, 0.400, 0.430, 0.240, 0.060, 0.080, 0.130, 0.110,
0.090, 0.120, 0.160, 0.110, 0.110, 0.240, 0.100, 0.240, 0.050, 0.150, 0.080, 0.120,
0.051, 0.074, 0.051, 0.060, 0.054, 0.063, 0.080, 0.135, 0.085, 0.130, 0.113, 0.087,
0.099, 0.092, 0.108, 0.109, 0.090, 0.102, 0.098, 0.117),
region = rep(c("low", "high"), each = 34) # Example regions for illustration
)
# Create the plot with linear models for each region
b <- ggplot(data, aes(x = connect, y = num_spec, color = region)) +
geom_point(size = 3) +  # Points colored by region
geom_smooth(method = "lm", se = FALSE) +  # Linear model for each region
labs(
x = "Connectance",
y = "Number of Species",
color = "Stream Order"
) +
theme_minimal() +
theme(legend.position = "top")  # Move the legend to the top
# Display the plot
b
# Load required library
library(ggplot2)
# Sample data (as provided)
data <- data.frame(
num_spec = c(42, 41, 65, 63, 13, 15, 15, 14, 17, 14, 13, 13, 14, 15, 13, 14, 87, 85, 88, 78,
27.75, 32.5, 38.75, 40.5, 13, 19, 19, 28, 117, 15, 10, 21, 63, 43, 38, 38, 47, 48,
50, 55, 63, 44, 50, 39, 63, 45, 59, 52, 102, 129, 100, 131, 93, 126, 31, 17, 32, 24,
33, 22, 39, 35, 32, 31, 37, 32, 33, 36),
connect = c(0.070, 0.070, 0.060, 0.060, 0.231, 0.257, 0.305, 0.308, 0.316, 0.319, 0.321, 0.321,
0.352, 0.352, 0.372, 0.385, 0.060, 0.060, 0.070, 0.080, 0.260, 0.220, 0.190, 0.190,
0.050, 0.140, 0.190, 0.200, 0.050, 0.400, 0.430, 0.240, 0.060, 0.080, 0.130, 0.110,
0.090, 0.120, 0.160, 0.110, 0.110, 0.240, 0.100, 0.240, 0.050, 0.150, 0.080, 0.120,
0.051, 0.074, 0.051, 0.060, 0.054, 0.063, 0.080, 0.135, 0.085, 0.130, 0.113, 0.087,
0.099, 0.092, 0.108, 0.109, 0.090, 0.102, 0.098, 0.117)
)
# Fit an inverse model
model <- nls(num_spec ~ a / connect + b, data = data, start = list(a = 1, b = 1))
# Create a sequence of connectance values for smoother curve
connect_seq <- seq(min(data$connect), max(data$connect), length.out = 100)
predicted_num_spec <- predict(model, newdata = data.frame(connect = connect_seq))
# Plot the data and fitted curve
ggplot(data, aes(x = connect, y = num_spec)) +
geom_point(size = 3, color = "steelblue") +  # Data points
geom_line(aes(x = connect_seq, y = predicted_num_spec), color = "red", size = 1) +  # Fitted inverse line
labs(
x = "Connectance",
y = "Number of Species",
title = "Inverse Relationship between Species Richness and Connectance"
) +
theme_minimal()
data<- read_xlsx('data.xlsx')
head(data,20)
data<- read_xlsx('data.xlsx')
library(readxl)
library(dplyr)
library(ggplot2)
library(patchwork)
data<- read_xlsx('data.xlsx')
head(data,20)
setwd("C:/Users/pgutierr/OneDrive - University of Vermont/Curriculum/18_ Estudiantes/uvm_students/2024 Reilly Connelly")
data<- read_xlsx('data.xlsx')
head(data,20)
# Fit an inverse model for each region
model_results <- data %>%
group_by(region) %>%
do(model = nls(num_spec ~ a / connect + b, data = ., start = list(a = 1, b = 1)))
# Generate predicted values for plotting
predicted_data <- data %>%
group_by(region) %>%
do({
model <- nls(num_spec ~ a / connect + b, data = ., start = list(a = 1, b = 1))
connect_seq <- seq(min(.$connect), max(.$connect), length.out = 100)
data.frame(
connect = connect_seq,
num_spec = predict(model, newdata = data.frame(connect = connect_seq)),
region = unique(.$region)
)
})
# Plot the data and fitted curves
ggplot(data, aes(x = connect, y = num_spec, color = region)) +
geom_point(size = 3) +  # Data points
geom_line(data = predicted_data, aes(x = connect, y = num_spec, color = region), size = 1) +  # Fitted inverse lines
labs(
x = "Connectance",
y = "Number of Species",
color = "Region",
title = "Relationship between Species Richness and Connectance by Region"
) +
theme_minimal() +
theme(legend.position = "top")
# Species richness–connectance relationship -------------------------------
# Create the plot with linear models for both regions on the same plot
# Fit an inverse model for each region
model_results <- data %>%
group_by(region) %>%
do(model = nls(num_spec ~ a / connect + b, data = ., start = list(a = 1, b = 1)))
# Generate predicted values for plotting
predicted_data <- data %>%
group_by(region) %>%
do({
model <- nls(num_spec ~ a / connect + b, data = ., start = list(a = 1, b = 1))
connect_seq <- seq(min(.$connect), max(.$connect), length.out = 100)
data.frame(
connect = connect_seq,
num_spec = predict(model, newdata = data.frame(connect = connect_seq)),
region = unique(.$region)
)
})
# Plot the data and fitted curves
b <- ggplot(data, aes(x = connect, y = num_spec, color = region)) +
geom_point(size = 3) +  # Data points
geom_line(data = predicted_data, aes(x = connect, y = num_spec, color = region), size = 1) +  # Fitted inverse lines
labs(
x = "Connectance",
y = "Number of Species",
color = "Region",
title = ""
) +
theme_minimal() +
theme(legend.position = "top")
b
a + b
# Create the plot with linear models for both regions on the same plot
a <- ggplot(data, aes(x = num_spec, y = num_link,
color = stream_order)) +
geom_point(size = 3) +  # Points colored by region
# geom_smooth(method = "lm", se = F) +  # Add separate linear models for each region
labs(
x = "Number of Species",
y = "num_link",
color = "stream_order"
) +
theme_minimal() +
theme(legend.position = "top")  # Move the legend to the top
a
# Species richness–connectance relationship -------------------------------
# Create the plot with linear models for both regions on the same plot
# Fit an inverse model for each region
model_results <- data %>%
group_by(region) %>%
do(model = nls(num_spec ~ a / connect + b, data = ., start = list(a = 1, b = 1)))
# Generate predicted values for plotting
predicted_data <- data %>%
group_by(region) %>%
do({
model <- nls(num_spec ~ a / connect + b, data = ., start = list(a = 1, b = 1))
connect_seq <- seq(min(.$connect), max(.$connect), length.out = 100)
data.frame(
connect = connect_seq,
num_spec = predict(model, newdata = data.frame(connect = connect_seq)),
region = unique(.$region)
)
})
# Create the plot with linear models for both regions on the same plot
a <- ggplot(data, aes(x = num_spec, y = num_link,
color = region)) +
geom_point(size = 3) +  # Points colored by region
# geom_smooth(method = "lm", se = F) +  # Add separate linear models for each region
labs(
x = "Number of Species",
y = "num_link",
color = "region"
) +
theme_minimal() +
theme(legend.position = "top")  # Move the legend to the top
a
# Species richness–connectance relationship -------------------------------
# Create the plot with linear models for both regions on the same plot
# Fit an inverse model for each region
model_results <- data %>%
group_by(region) %>%
do(model = nls(num_spec ~ a / connect + b, data = ., start = list(a = 1, b = 1)))
# Generate predicted values for plotting
predicted_data <- data %>%
group_by(region) %>%
do({
model <- nls(num_spec ~ a / connect + b, data = ., start = list(a = 1, b = 1))
connect_seq <- seq(min(.$connect), max(.$connect), length.out = 100)
data.frame(
connect = connect_seq,
num_spec = predict(model, newdata = data.frame(connect = connect_seq)),
region = unique(.$region)
)
})
# Plot the data and fitted curves
b <- ggplot(data, aes(x = connect, y = num_spec, color = region)) +
geom_point(size = 3) +  # Data points
geom_line(data = predicted_data, aes(x = connect, y = num_spec, color = region), size = 1) +  # Fitted inverse lines
labs(
x = "Connectance",
y = "Number of Species",
color = "Region",
title = ""
) +
theme_minimal() +
theme(legend.position = "top")
b
a + b
# Create the plot with linear models for both regions on the same plot
a <- ggplot(data, aes(x = num_spec, y = num_link,
color = region)) +
geom_point(size = 3) +  # Points colored by region
geom_smooth(method = "lm", se = F) +  # Add separate linear models for each region
labs(
x = "Number of Species",
y = "num_link",
color = "region"
) +
theme_minimal() +
theme(legend.position = "top")  # Move the legend to the top
a
# Species richness–connectance relationship -------------------------------
# Create the plot with linear models for both regions on the same plot
# Fit an inverse model for each region
model_results <- data %>%
group_by(region) %>%
do(model = nls(num_spec ~ a / connect + b, data = ., start = list(a = 1, b = 1)))
# Generate predicted values for plotting
predicted_data <- data %>%
group_by(region) %>%
do({
model <- nls(num_spec ~ a / connect + b, data = ., start = list(a = 1, b = 1))
connect_seq <- seq(min(.$connect), max(.$connect), length.out = 100)
data.frame(
connect = connect_seq,
num_spec = predict(model, newdata = data.frame(connect = connect_seq)),
region = unique(.$region)
)
})
# Plot the data and fitted curves
b <- ggplot(data, aes(x = connect, y = num_spec, color = region)) +
geom_point(size = 3) +  # Data points
geom_line(data = predicted_data, aes(x = connect, y = num_spec, color = region), size = 1) +  # Fitted inverse lines
labs(
x = "Connectance",
y = "Number of Species",
color = "Region",
title = ""
) +
theme_minimal() +
theme(legend.position = "top")
b
a + b
library(readxl)
library(dplyr)
library(ggplot2)
library(patchwork)
data<- read_xlsx('data.xlsx')
setwd("C:/Users/pgutierr/OneDrive - University of Vermont/Curriculum/18_ Estudiantes/uvm_students/2024 Reilly Connelly")
data<- read_xlsx('data.xlsx')
head(data,20)
mod1 <- lm(num_link~num_spec, data=data)
summary(mod1)
shapiro.test(residuals(mod1))
mod2 <- lm(num_spec~connect, data=data)
summary(mod2)
shapiro.test(residuals(mod2))
# Create the plot# Create tdatahe plot
ggplot(data, aes(x = num_spec, y = num_link,
color = region)) +
geom_point(size = 3) +
labs(
x = "Connectance",
y = "Number of Species",
color = "stream_order"
) +
theme_minimal() +
theme(legend.position = "top")
# Create the plot with linear models for both regions on the same plot
a <- ggplot(data, aes(x = num_spec, y = num_link,
color = region)) +
geom_point(size = 3) +  # Points colored by region
geom_smooth(method = "lm", se = F) +  # Add separate linear models for each region
labs(
x = "Number of Species",
y = "num_link",
color = "region"
) +
theme_minimal() +
theme(legend.position = "top")  # Move the legend to the top
a
# Species richness–connectance relationship -------------------------------
# Create the plot with linear models for both regions on the same plot
# Fit an inverse model for each region
model_results <- data %>%
group_by(region) %>%
do(model = nls(num_spec ~ a / connect + b, data = ., start = list(a = 1, b = 1)))
# Generate predicted values for plotting
predicted_data <- data %>%
group_by(region) %>%
do({
model <- nls(num_spec ~ a / connect + b, data = ., start = list(a = 1, b = 1))
connect_seq <- seq(min(.$connect), max(.$connect), length.out = 100)
data.frame(
connect = connect_seq,
num_spec = predict(model, newdata = data.frame(connect = connect_seq)),
region = unique(.$region)
)
})
# Plot the data and fitted curves
b <- ggplot(data, aes(x = connect, y = num_spec, color = region)) +
geom_point(size = 3) +  # Data points
geom_line(data = predicted_data, aes(x = connect, y = num_spec, color = region), size = 1) +  # Fitted inverse lines
labs(
x = "Connectance",
y = "Number of Species",
color = "Region",
title = ""
) +
theme_minimal() +
theme(legend.position = "top")
b
a + b
data<- read_xlsx('data.xlsx')
head(data,20)
mod1 <- lm(num_link~num_spec, data=data)
summary(mod1)
shapiro.test(residuals(mod1))
mod2 <- lm(num_spec~connect, data=data)
summary(mod2)
shapiro.test(residuals(mod2))
# Create the plot# Create tdatahe plot
ggplot(data, aes(x = num_spec, y = num_link,
color = region)) +
geom_point(size = 3) +
labs(
x = "Connectance",
y = "Number of Species",
color = "stream_order"
) +
theme_minimal() +
theme(legend.position = "top")
# Create the plot with linear models for both regions on the same plot
a <- ggplot(data, aes(x = num_spec, y = num_link,
color = region)) +
geom_point(size = 3) +  # Points colored by region
geom_smooth(method = "lm", se = F) +  # Add separate linear models for each region
labs(
x = "Number of Species",
y = "num_link",
color = "region"
) +
theme_minimal() +
theme(legend.position = "top")  # Move the legend to the top
a
# Species richness–connectance relationship -------------------------------
# Create the plot with linear models for both regions on the same plot
# Fit an inverse model for each region
model_results <- data %>%
group_by(region) %>%
do(model = nls(num_spec ~ a / connect + b, data = ., start = list(a = 1, b = 1)))
# Generate predicted values for plotting
predicted_data <- data %>%
group_by(region) %>%
do({
model <- nls(num_spec ~ a / connect + b, data = ., start = list(a = 1, b = 1))
connect_seq <- seq(min(.$connect), max(.$connect), length.out = 100)
data.frame(
connect = connect_seq,
num_spec = predict(model, newdata = data.frame(connect = connect_seq)),
region = unique(.$region)
)
})
# Plot the data and fitted curves
b <- ggplot(data, aes(x = connect, y = num_spec, color = region)) +
geom_point(size = 3) +  # Data points
geom_line(data = predicted_data, aes(x = connect, y = num_spec, color = region), size = 1) +  # Fitted inverse lines
labs(
x = "Connectance",
y = "Number of Species",
color = "Region",
title = ""
) +
theme_minimal() +
theme(legend.position = "top")
b
a + b
